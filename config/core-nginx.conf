server {
  listen      80;
  server_name <HOST_NAME>;
  charset     utf-8;

  rewrite     ^   https://$server_name$request_uri? permanent;
}

server {
  listen      443;
  server_name <HOST_NAME>;
  charset     utf-8;

  set $my_host $host;
  # if the host header is an ip address change it to www.mysite.com
  # this works around requests coming from ELB with either the instance's
  # internal ip address in the case of health checks or an unknown internal
  # ip address in the case of latency checks. translating them to a known
  # good host header makes django's ALLOWED_HOSTS happy
  if ($host ~ "\d+\.\d+\.\d+\.\d+") {
      set $my_host "core.{{project_name}}.com";
  }

  # SSL
  ssl on;
  ssl_certificate /etc/ssl/certs/{{project_name}}.crt;
  ssl_certificate_key /etc/ssl/private/{{project_name}}.key;

  # Django admin media.
  location /media/admin/ {
    alias <PROJECTPATH>/lib/python2.7/site-packages/django/contrib/admin/static/admin/;
  }

  # Your project's static media.
  location /media/ {
    alias <PROJECTPATH>/releases/current/<APP_NAME>/media/;
  }

  # Your project's static media.
  location /static/ {
    alias <PROJECTPATH>/releases/current/<APP_NAME>/static/;
  }

  # Directories
  client_body_temp_path  <PROJECTPATH>/tmp/client_body/  2 2;
  fastcgi_temp_path      <PROJECTPATH>/tmp/fastcgi/;
  proxy_temp_path        <PROJECTPATH>/tmp/proxy/;
  uwsgi_temp_path        <PROJECTPATH>/tmp/uwsgi/;

  # Finally, send all non-media requests to the Django server.
  location / {

    uwsgi_read_timeout 1200;
    uwsgi_send_timeout 1200;
    uwsgi_pass 127.0.0.1:3032;
    include     uwsgi_params;
    uwsgi_param HTTP_HOST $my_host;
  }
}
