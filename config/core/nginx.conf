user www-data;
worker_processes  1;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}

http {

  include       /etc/nginx/mime.types;

  set_real_ip_from  0.0.0.0/0;
  real_ip_header    X-Forwarded-For;
  
  default_type          application/octet-stream;
  keepalive_timeout     10;
  client_max_body_size  20m;
  sendfile              on;
  gzip                  on;
  send_timeout 3600;
  # Directories
  client_body_temp_path  /mnt/ym/expa_core/tmp/client_body/  2 2;
  fastcgi_temp_path      /mnt/ym/expa_core/tmp/fastcgi/;
  proxy_temp_path        /mnt/ym/expa_core/tmp/proxy/;
  uwsgi_temp_path        /mnt/ym/expa_core/tmp/uwsgi/;
  
  # Logging
  access_log  /var/log/nginx/access.log;


  
  
  server {
    listen      80;
    server_name core.{{project_name}}.com;
    charset     utf-8;

    rewrite     ^   https://$server_name$request_uri? permanent;
  }

  server {
    listen      443;
    server_name core.{{project_name}}.com;
    charset     utf-8;


    set $my_host $host;
    # if the host header is an ip address change it to www.mysite.com
    # this works around requests coming from ELB with either the instance's
    # internal ip address in the case of health checks or an unknown internal
    # ip address in the case of latency checks. translating them to a known
    # good host header makes django's ALLOWED_HOSTS happy
    if ($host ~ "\d+\.\d+\.\d+\.\d+") {
        set $my_host "core.{{project_name}}.com";
    }

    # SSL
    ssl on;
    ssl_certificate /etc/ssl/certs/{{project_name}}.crt;
    ssl_certificate_key /etc/ssl/private/{{project_name}}.key;

    # Django admin media.
    location /media/admin/ {
      alias /mnt/ym/expa_core/lib/python2.7/site-packages/django/contrib/admin/static/admin/;
    }

    # Your project's static media.
    location /media/ {
      alias /mnt/ym/expa_core/releases/current/expa_core/media/;
    }

    # Your project's static media.
    location /static/ {
      alias /mnt/ym/expa_core/releases/current/expa_core/static/;
    }


    # Finally, send all non-media requests to the Django server.
    location / {

      uwsgi_read_timeout 1200;
      uwsgi_send_timeout 1200;
      uwsgi_pass 127.0.0.1:3031;
      include     uwsgi_params;
      uwsgi_param HTTP_HOST $my_host;

    }
  }
}
